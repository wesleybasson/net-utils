<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApiX.ErrorHandling</name>
    </assembly>
    <members>
        <member name="T:ApiX.ErrorHandling.ApiXErrorOptions">
            <summary>
            Options controlling how ApiX error responses are generated.
            Configure via <c>builder.Services.AddApiXErrorHandling(options =&gt; ...)</c>.
            </summary>
        </member>
        <member name="P:ApiX.ErrorHandling.ApiXErrorOptions.IncludeDetailsInDevelopment">
            <summary>
            When <c>true</c>, stack traces, exception messages, and payloads are included in
            responses if the host environment is <c>Development</c>.  
            In production, these details are hidden regardless of this setting.
            </summary>
        </member>
        <member name="P:ApiX.ErrorHandling.ApiXErrorOptions.DefaultTitle">
            <summary>
            The default <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title"/> value used when exception
            details are hidden (typically in Production).
            </summary>
        </member>
        <member name="P:ApiX.ErrorHandling.ApiXErrorOptions.StatusMap">
            <summary>
            A mapping of common exception types to their default HTTP status codes.  
            This mapping is consulted when handling exceptions that are not of type
            <see cref="T:ApiX.ErrorHandling.ApiXException"/>.
            </summary>
        </member>
        <member name="T:ApiX.ErrorHandling.ApiXException">
            <summary>
            A single, general-purpose exception type for ApiX applications.  
            Encapsulates a stable machine-readable error <see cref="P:ApiX.ErrorHandling.ApiXException.Code"/>, an HTTP <see cref="P:ApiX.ErrorHandling.ApiXException.Status"/>,
            and optional context such as a <see cref="P:ApiX.ErrorHandling.ApiXException.Payload"/> or arbitrary <see cref="P:ApiX.ErrorHandling.ApiXException.Extensions"/>.
            </summary>
        </member>
        <member name="P:ApiX.ErrorHandling.ApiXException.Code">
            <summary>
            A stable machine-readable identifier for the error, e.g. <c>"auth.user_exists"</c>.
            </summary>
        </member>
        <member name="P:ApiX.ErrorHandling.ApiXException.Status">
            <summary>
            The HTTP status code that best represents this error (e.g. 400, 404, 409).
            </summary>
        </member>
        <member name="P:ApiX.ErrorHandling.ApiXException.Payload">
            <summary>
            An optional object containing contextual information about the error.  
            Typically included only in Development responses.
            </summary>
        </member>
        <member name="P:ApiX.ErrorHandling.ApiXException.Extensions">
            <summary>
            An arbitrary extension dictionary for additional metadata about the error.
            </summary>
        </member>
        <member name="M:ApiX.ErrorHandling.ApiXException.#ctor(System.String,System.Int32,System.String,System.Object,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Exception)">
            <summary>
            Creates a new <see cref="T:ApiX.ErrorHandling.ApiXException"/>.
            </summary>
            <param name="code">The stable machine-readable error code (e.g. <c>"entity.not_found"</c>).</param>
            <param name="status">The HTTP status code to return (e.g. 404, 409).</param>
            <param name="message">Optional human-readable message. Defaults to <paramref name="code"/>.</param>
            <param name="payload">Optional contextual payload object for additional details.</param>
            <param name="extensions">Optional additional metadata extensions.</param>
            <param name="inner">Optional inner exception that caused this error.</param>
        </member>
        <member name="T:ApiX.ErrorHandling.ApiXExceptionHandler">
            <summary>
            Configures and installs the ApiX global exception handling pipeline.  
            Provides <see cref="M:ApiX.ErrorHandling.ApiXExceptionHandler.AddApiXErrorHandling(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{ApiX.ErrorHandling.ApiXErrorOptions})"/> for DI setup and <see cref="M:ApiX.ErrorHandling.ApiXExceptionHandler.Handler(Microsoft.AspNetCore.Builder.IApplicationBuilder)"/>  
            for use with <c>app.UseExceptionHandler(...)</c>.
            </summary>
        </member>
        <member name="M:ApiX.ErrorHandling.ApiXExceptionHandler.AddApiXErrorHandling(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{ApiX.ErrorHandling.ApiXErrorOptions})">
            <summary>
            Registers ApiX error handling services:
            <list type="bullet">
              <item><description>Adds the built-in <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ProblemDetailsFactory"/> via <c>AddProblemDetails()</c>.</description></item>
              <item><description>Binds <see cref="T:ApiX.ErrorHandling.ApiXErrorOptions"/> for configuration.</description></item>
              <item><description>Registers <see cref="T:ApiX.ErrorHandling.DefaultExceptionMapper"/> as the default <see cref="T:ApiX.ErrorHandling.IExceptionToProblemMapper"/>.</description></item>
            </list>
            </summary>
            <param name="services">The application service collection.</param>
            <param name="configure">
            An optional delegate to configure <see cref="T:ApiX.ErrorHandling.ApiXErrorOptions"/>  
            (e.g. adding custom status mappings or toggling detail inclusion).
            </param>
        </member>
        <member name="M:ApiX.ErrorHandling.ApiXExceptionHandler.Handler(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Exception handler endpoint for use with <c>app.UseExceptionHandler(ApiXExceptionHandler.Handler)</c>.  
            Translates unhandled exceptions into consistent <see cref="T:ApiX.ErrorHandling.ApiXProblemDetails"/> responses.
            </summary>
            <param name="app">The application builder pipeline.</param>
        </member>
        <member name="T:ApiX.ErrorHandling.ApiXProblemDetails">
            <summary>
            An RFC7807 <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> type extended with ApiX-specific metadata.  
            Used as the canonical error response payload for ApiX applications.
            </summary>
        </member>
        <member name="P:ApiX.ErrorHandling.ApiXProblemDetails.Code">
            <summary>
            A stable, machine-readable error code (e.g. <c>"entity.not_found"</c>).
            </summary>
        </member>
        <member name="P:ApiX.ErrorHandling.ApiXProblemDetails.TraceId">
            <summary>
            A trace or correlation identifier associated with the request,  
            typically <see cref="P:System.Diagnostics.Activity.Id"/> or <see cref="P:Microsoft.AspNetCore.Http.HttpContext.TraceIdentifier"/>.
            </summary>
        </member>
        <member name="P:ApiX.ErrorHandling.ApiXProblemDetails.Payload">
            <summary>
            An optional payload providing additional error context (e.g. parameters or state).  
            Typically only included in Development responses for debugging.
            </summary>
        </member>
        <member name="T:ApiX.ErrorHandling.IExceptionToProblemMapper">
            <summary>
            Maps exceptions to RFC7807 <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> objects for consistent error responses.  
            Implementations can add app-specific conventions such as error code mapping or validation shaping.
            </summary>
        </member>
        <member name="M:ApiX.ErrorHandling.IExceptionToProblemMapper.Map(Microsoft.AspNetCore.Http.HttpContext,System.Exception,System.Boolean,Microsoft.AspNetCore.Mvc.Infrastructure.ProblemDetailsFactory)">
            <summary>
            Creates an <see cref="T:ApiX.ErrorHandling.ApiXProblemDetails"/> instance for the given exception.
            </summary>
            <param name="http">The current <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <param name="ex">The exception to map.</param>
            <param name="includeDetails">
            Whether to include detailed information such as exception messages,
            stack traces, and payloads (usually only in Development).
            </param>
            <param name="factory">
            The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ProblemDetailsFactory"/> used to create the base <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/>.
            </param>
            <returns>An <see cref="T:ApiX.ErrorHandling.ApiXProblemDetails"/> instance describing the exception.</returns>
        </member>
        <member name="T:ApiX.ErrorHandling.DefaultExceptionMapper">
            <summary>
            Default implementation of <see cref="T:ApiX.ErrorHandling.IExceptionToProblemMapper"/>.  
            <list type="bullet">
              <item><description>Handles <see cref="T:ApiX.ErrorHandling.ApiXException"/> specially, using its code, status, and payload.</description></item>
              <item><description>Falls back to <see cref="P:ApiX.ErrorHandling.ApiXErrorOptions.StatusMap"/> for well-known exception types.</description></item>
              <item><description>Includes messages, stack traces, and payloads when enabled in Development.</description></item>
              <item><description>Detects FluentValidation validation errors (via reflection) and attaches field-level errors.</description></item>
            </list>
            </summary>
        </member>
        <member name="M:ApiX.ErrorHandling.DefaultExceptionMapper.#ctor(Microsoft.Extensions.Options.IOptions{ApiX.ErrorHandling.ApiXErrorOptions},Microsoft.Extensions.Logging.ILogger{ApiX.ErrorHandling.DefaultExceptionMapper})">
            <summary>
            Initializes a new instance of the <see cref="T:ApiX.ErrorHandling.DefaultExceptionMapper"/> class.
            </summary>
            <param name="options">Configuration options controlling error mapping behavior.</param>
            <param name="log">Logger used to record exception details.</param>
        </member>
        <member name="M:ApiX.ErrorHandling.DefaultExceptionMapper.Map(Microsoft.AspNetCore.Http.HttpContext,System.Exception,System.Boolean,Microsoft.AspNetCore.Mvc.Infrastructure.ProblemDetailsFactory)">
            <inheritdoc />
        </member>
        <member name="M:ApiX.ErrorHandling.DefaultExceptionMapper.TryAttachFluentValidationErrors(System.Exception,System.Boolean,ApiX.ErrorHandling.ApiXProblemDetails)">
            <summary>
            If the exception is a FluentValidation <c>ValidationException</c> and details are enabled,
            captures property-level validation errors into <c>ProblemDetails.Extensions["errors"]</c>.  
            Reflection is used to avoid a direct package dependency on FluentValidation.
            </summary>
            <param name="ex">The exception to inspect.</param>
            <param name="includeDetails">Whether detailed error information should be included.</param>
            <param name="dest">The <see cref="T:ApiX.ErrorHandling.ApiXProblemDetails"/> to enrich.</param>
        </member>
        <member name="T:ApiX.ErrorHandling.ErrorCode">
            <summary>
            Stable, enumerated error codes used across ApiX applications.  
            Each value maps to a machine-readable string and a default human-readable message.
            </summary>
        </member>
        <member name="F:ApiX.ErrorHandling.ErrorCode.Auth_UserExists">
            <summary>
            Indicates that an attempt to create or register a user failed because the user already exists.
            </summary>
        </member>
        <member name="F:ApiX.ErrorHandling.ErrorCode.Auth_LoginFailed">
            <summary>
            Indicates that authentication has failed for the provided credentials.
            </summary>
        </member>
        <member name="F:ApiX.ErrorHandling.ErrorCode.Entity_NotFound">
            <summary>
            Indicates that a requested entity or resource could not be found.
            </summary>
        </member>
        <member name="F:ApiX.ErrorHandling.ErrorCode.Entity_CreateFailed">
            <summary>
            Indicates that a requested entity could not be created.
            </summary>
        </member>
        <member name="F:ApiX.ErrorHandling.ErrorCode.Entity_UpdateFailed">
            <summary>
            Indicates that a requested entity could not be updated.
            </summary>
        </member>
        <member name="F:ApiX.ErrorHandling.ErrorCode.Entity_DeleteFailed">
            <summary>
            Indicates that a requested entity could not be deleted.
            </summary>
        </member>
        <member name="F:ApiX.ErrorHandling.ErrorCode.Validation_Failed">
            <summary>
            Indicates that one or more validation rules have failed.
            </summary>
        </member>
        <member name="F:ApiX.ErrorHandling.ErrorCode.Generic_Error">
            <summary>
            A generic error not otherwise categorized.
            </summary>
        </member>
        <member name="T:ApiX.ErrorHandling.ErrorCatalog">
            <summary>
            Provides mapping utilities for <see cref="T:ApiX.ErrorHandling.ErrorCode"/> values,
            including stable string codes, default messages, and lightweight templating.
            </summary>
        </member>
        <member name="M:ApiX.ErrorHandling.ErrorCatalog.ToStringCode(ApiX.ErrorHandling.ErrorCode)">
            <summary>
            Converts an <see cref="T:ApiX.ErrorHandling.ErrorCode"/> into its stable, machine-readable string representation.  
            Example: <see cref="F:ApiX.ErrorHandling.ErrorCode.Entity_NotFound"/> → <c>"entity.not_found"</c>.
            </summary>
            <param name="c">The error code.</param>
            <returns>A machine-readable error string.</returns>
        </member>
        <member name="M:ApiX.ErrorHandling.ErrorCatalog.DefaultMessage(ApiX.ErrorHandling.ErrorCode)">
            <summary>
            Resolves the default human-readable message for an <see cref="T:ApiX.ErrorHandling.ErrorCode"/>.  
            Example: <see cref="F:ApiX.ErrorHandling.ErrorCode.Entity_NotFound"/> → <c>"The requested resource was not found."</c>.
            </summary>
            <param name="c">The error code.</param>
            <returns>A default error message suitable for end-users.</returns>
        </member>
        <member name="M:ApiX.ErrorHandling.ErrorCatalog.Format(System.String,System.Object)">
            <summary>
            Applies template parameters to a message string by replacing placeholders of the form <c>{Name}</c>.  
            Example: <c>"Entity {Id} not found."</c> + <c>new { Id = 42 }</c> → <c>"Entity 42 not found."</c>.
            </summary>
            <param name="template">The message template.</param>
            <param name="parameters">An anonymous object providing replacement values.</param>
            <returns>The formatted string with placeholders substituted.</returns>
        </member>
        <member name="T:ApiX.ErrorHandling.ResultsExtensions">
            <summary>
            Extension methods for producing consistent success and error responses
            using ASP.NET Core Minimal API <see cref="T:Microsoft.AspNetCore.Http.IResult"/> primitives.
            </summary>
        </member>
        <member name="M:ApiX.ErrorHandling.ResultsExtensions.Problem(Microsoft.AspNetCore.Http.IResultExtensions,ApiX.ErrorHandling.ErrorCode,System.Int32,System.String,System.Object,System.Object)">
            <summary>
            Produces a standardized RFC7807-style <c>ProblemDetails</c> JSON response
            with an ApiX error <see cref="T:ApiX.ErrorHandling.ErrorCode"/>, status code, and optional payload.
            </summary>
            <param name="_">Extension target (not used).</param>
            <param name="code">The machine-readable <see cref="T:ApiX.ErrorHandling.ErrorCode"/> representing the error.</param>
            <param name="status">The HTTP status code to return.</param>
            <param name="message">
            An optional human-readable message. If not supplied, the default message
            associated with the error code is used.
            </param>
            <param name="payload">
            Optional contextual object with extra error information. Will be included
            in the serialized response only when configured.
            </param>
            <param name="templateParameters">
            Optional parameters to substitute into the error message if the message
            contains placeholders (e.g. <c>{Id}</c>).
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> representing a JSON response with the supplied
            status code and a structured <see cref="T:ApiX.ErrorHandling.ApiXProblemDetails"/> payload.
            </returns>
        </member>
        <member name="M:ApiX.ErrorHandling.ResultsExtensions.Ok``1(``0,System.String)">
            <summary>
            Produces a standardized "success" response wrapping a payload object.
            </summary>
            <typeparam name="T">The type of the payload object.</typeparam>
            <param name="payload">The value to return to the client.</param>
            <param name="message">
            An optional message. Defaults to <c>"Success"</c>.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> representing a JSON response with HTTP 200 OK,
            containing a success code, message, and the supplied payload.
            </returns>
        </member>
    </members>
</doc>
